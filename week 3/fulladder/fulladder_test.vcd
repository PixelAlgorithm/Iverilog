$date
	Tue Aug 19 20:31:44 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module fulladder_tb $end
$var wire 1 ! cy $end
$var wire 1 " ss $end
$var reg 1 # aa $end
$var reg 1 $ bb $end
$var reg 1 % cc $end
$scope module uut $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 ( cin $end
$var wire 1 ! cout $end
$var wire 1 " sum $end
$var wire 1 ) w1 $end
$var wire 1 * w2 $end
$var wire 1 + w3 $end
$var wire 1 , w4 $end
$var wire 1 - w5 $end
$scope module x1 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 ) c $end
$upscope $end
$scope module x2 $end
$var wire 1 ) a $end
$var wire 1 ( b $end
$var wire 1 " c $end
$upscope $end
$scope module a1 $end
$var wire 1 & a $end
$var wire 1 ' b $end
$var wire 1 * c $end
$upscope $end
$scope module a2 $end
$var wire 1 ' a $end
$var wire 1 ( b $end
$var wire 1 + c $end
$upscope $end
$scope module a3 $end
$var wire 1 & a $end
$var wire 1 ( b $end
$var wire 1 , c $end
$upscope $end
$scope module o1 $end
$var wire 1 * a $end
$var wire 1 + b $end
$var wire 1 - c $end
$upscope $end
$scope module o2 $end
$var wire 1 - a $end
$var wire 1 , b $end
$var wire 1 ! c $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#5
0!
0-
0"
0+
0)
0*
0,
0%
0(
0$
0'
0#
0&
#10
1"
1)
1$
1'
#15
0$
0'
1#
1&
#20
1!
0"
1-
0)
1*
1$
1'
#25
0!
0-
1"
0*
1%
1(
0$
0'
0#
0&
#30
1!
0"
1-
1)
1+
1$
1'
#35
0-
0+
1,
0$
0'
1#
1&
#40
1"
1-
0)
1*
1+
1$
1'
